on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install musl tooling
      run: sudo apt install musl-tools
    - name: Add musl target
      run:  rustup target add x86_64-unknown-linux-musl aarch64-unknown-linux-musl
    - name: Build
      run: |
        cargo build --release --target x86_64-unknown-linux-musl
        cargo build --release --target aarch64-unknown-linux-musl
    - name: version
      run: echo "::set-output name=version::$(./target/x86_64-unknown-linux-musl/release/node-ping --version)"
      id: version
    - name: release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: ${{ steps.version.outputs.version }}
        tag_name: ${{ github.ref }}
        body_path: CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: upload linux amd64 artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/x86_64-unknownlinux-musl/release/node-ping
        asset_name: node-ping-amd64
        asset_content_type: application/octet-stream-
    - name: upload linux aarch64 artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/aarch64-unknown-linux-musl/release/node-ping
        asset_name: node-ping-aarch64
        asset_content_type: application/octet-stream-
